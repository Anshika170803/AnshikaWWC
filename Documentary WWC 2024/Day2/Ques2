#include <bits/stdc++.h>
using namespace std;

int isValid(vector<vector<int>> & mat) {
  
    unordered_set<int> rows[9];
    unordered_set<int> cols[9];
    unordered_set<int> subMat[9];

    for (int i = 0; i < 9; i++) {
        for (int j = 0; j < 9; j++) {
          
            int val = mat[i][j];

            if (val == 0) continue;

            if (rows[i].find(val) != rows[i].end()) {
              
                return false;
            }
          
            rows[i].insert(val);

            if (cols[j].find(val) != cols[j].end()) {
              
                return false; 
            }
            cols[j].insert(val);

            int idx = (i / 3) * 3 + j / 3;
          
            if (subMat[idx].find(val) != subMat[idx].end()) {
              
                return false; 
            }
          
            subMat[idx].insert(val);
        }
    }
 
    return true;
}

int main() {

    vector<vector<int>> mat = {
        {9, 3, 0, 0, 7, 0, 0, 0, 0},
        {6, 0, 0, 1, 9, 5, 0, 0, 0},
        {0, 5, 8, 0, 0, 0, 0, 6, 0},
        {8, 0, 0, 0, 6, 0, 0, 0, 3},
        {4, 0, 0, 8, 0, 3, 0, 0, 1},
        {7, 0, 0, 0, 2, 0, 0, 0, 6},
        {0, 6, 0, 0, 0, 0, 2, 8, 0},
        {0, 0, 0, 4, 1, 9, 0, 0, 5},
        {0, 0, 0, 0, 8, 0, 0, 7, 9}
    };
    cout << (isValid(mat) ? "valid" : "Not valid") << "\n";
    return 0;
}
